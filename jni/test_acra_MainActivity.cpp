/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "log.h"
/* Header for class test_acra_MainActivity */

#ifndef _Included_test_acra_MainActivity
#define _Included_test_acra_MainActivity
#ifdef __cplusplus
extern "C" {
#endif

void throwJavaException(JNIEnv *env, const char *msg) {
	// You can put your own exception here
	jclass c = env->FindClass("java/lang/RuntimeException");
	if (0 == c) {
		//B plan: null pointer ...
		c = env->FindClass("java/lang/NullPointerException");
	}
	env->ThrowNew(c, msg);
}

/*
 * Class:     test_acra_MainActivity
 * Method:    nativeThrowExp
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_test_acra_MainActivity_nativeThrowExp
(JNIEnv * env, jobject jobj) {
	LOGI("%s called, to throw exp from native.\n", __FUNCTION__);
	throwJavaException(env, "throw exp from native for test");
}

/*
 * Class:     test_acra_MainActivity
 * Method:    nativeDirectPanic
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_test_acra_MainActivity_nativeDirectPanic
(JNIEnv * env, jobject jobj) {
	LOGI("%s called, to panic native directly.\n", __FUNCTION__);
	env = 0;// null
	env->FindClass("java/lang/NullPointerException");
}

#ifdef __cplusplus
}
#endif
#endif
